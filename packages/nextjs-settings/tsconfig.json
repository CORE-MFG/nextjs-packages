{
  "compilerOptions": {
    // Directory containing source TypeScript files
    "rootDir": "./src",            

    // Directory where compiled JavaScript and declaration files are output
    "outDir": "./dist",            

    // JS language target version. ES2022 is safe for modern Node.js and Next.js consumers
    "target": "ES2022",            

    // Module system for output. ESNEXT ensures compatibility with modern bundlers and ESM imports
    "module": "ESNEXT",            

    // Provide typings for ES2022 built-ins like `Array.prototype.at`
    "lib": ["ES2022", "DOM"],             

    // Resolves modules like Node.js (checks node_modules, file extensions)
    "moduleResolution": "node",    

    // Include Node.js types for globals like `process` and `Buffer`
    "types": ["node"],             

    // Generate source maps for easier debugging in consuming apps
    "sourceMap": true,             

    // Generate TypeScript declaration files (.d.ts) for consumers
    "declaration": true,           

    // Generate maps for declaration files to help debugging TS in consumers
    "declarationMap": true,        

    // Enable all strict type-checking options
    "strict": true,                

    // Forces TypeScript to check for `undefined` when accessing object keys by index
    "noUncheckedIndexedAccess": true, 

    // Makes optional properties behave strictly, preventing accidental undefined usage
    "exactOptionalPropertyTypes": true, 

    // Allows default imports from CommonJS modules (like `import fs from 'fs'`)
    "esModuleInterop": true,       

    // Another layer of support for default imports from non-ESM modules
    "allowSyntheticDefaultImports": true, 

    // Ensures each file can be transpiled independently (required for libraries used in bundlers)
    "isolatedModules": true,       

    // Enforces consistent casing for file names to avoid cross-platform issues
    "forceConsistentCasingInFileNames": true, 

    // Skip type-checking of external modules to speed up compilation
    "skipLibCheck": true           
  },

  // Include all TS files under src
  "include": ["src"],

  // Exclude example code or test files from compilation
  "exclude": ["**/examples", "**/__tests__"]
}
