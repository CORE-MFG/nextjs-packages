name: Publish Packages

on:
  push:
    tags:
      - "*-v*.*.*" # only trigger for tags like nextjs-settings@v1.2.3 or nextjs-logging@v1.2.3

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      PACKAGE_MGR_TOKEN: ${{ secrets.PACKAGE_MGR_TOKEN }}
    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v3

      # 2. Setup Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com

      # 3. Extract package name from tag
      - name: Extract package name
        id: extract-package
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          PACKAGE_NAME=${TAG_NAME%-v*}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "Building and publishing package: $PACKAGE_NAME"

      # 4. Install dependencies using pnpm (conditionally bypass frozen lockfile)
      - name: Install dependencies
        run: |
          npm install -g pnpm
          # Array of packages that can bypass frozen lockfile
          NON_FROZEN_PACKAGES=("nextjs-logging")
          PACKAGE_NAME=${{ steps.extract-package.outputs.package_name }}

          if [[ " ${NON_FROZEN_PACKAGES[@]} " =~ " ${PACKAGE_NAME} " ]]; then
            echo "Skipping frozen-lockfile for package: $PACKAGE_NAME"
            pnpm install --filter ./packages/${{ steps.extract-package.outputs.package_name }} --no-frozen-lockfile
          else
            echo "Using frozen-lockfile for package: $PACKAGE_NAME"
            pnpm install --filter ./packages/${{ steps.extract-package.outputs.package_name }} --frozen-lockfile
          fi

      # 5. Build specific package only
      - name: Build package
        run: pnpm --filter ./packages/${{ steps.extract-package.outputs.package_name }} build

      # 6. Publish specific package only
      - name: Publish package
        run: pnpm --filter ./packages/${{ steps.extract-package.outputs.package_name }} publish --access public --no-git-checks
